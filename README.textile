h1. ActsAsConfigurable

!!! This is an fork of the original, code was completly rewritten, it works differently, read bellow for more informations !!!

Rails plugin that adds dynamic (non-database) configuration settings to any class (also models & controlers).

h2. Installation

In rails application directory call:
<pre><code>
script/plugin install git@github.com:mpapis/acts_as_configurable.git
</code></pre>

h2. Examples

Setup file:
<pre><code>
default:
  :setting1: 1st
Book:
  :setting1: 2nd
settings:
  :setting1: 3rd
allow_comments: false
</code></pre>

Example usages:
<pre><code>
class User < ActiveRecord::Base
  acts_as_configurable  
end
puts "#{User.configuration[:setting1]}"
puts "#{User.new.configuration[:setting1]}"
class Book < ActiveRecord::Base
  acts_as_configurable
end
puts "#{Book.configuration[:setting1]}"
class Comment < ActiveRecord::Base
  acts_as_configurable :defult => :settings
end
puts "#{Comment.configuration[:setting1]}"
class Address < ActiveRecord::Base
  acts_as_configurable :field=>allow_comments
end
puts "#{Address.allow_comments}"
class Post < ActiveRecord::Base
  acts_as_configurable :conf, :for => :settings
  acts_as_configurable :conf_book, :for => Book
end
puts "#{Post.conf[:setting1]}"
puts "#{Post.new.conf_book[:setting1]}"
</code></pre>

h2. Default settings for :default, :name, :for, :default can be overwritten using:
<pre><code>
ActsAsConfigurable::Configuration.default_method_name - set new default for name, if it is not set then 'configuration' is used
ActsAsConfigurable::Configuration.default_klass_name - set new default for 'for', if not set It tryes to use class name, but if not available 'default' will be used
ActsAsConfigurable::Configuration.default_key_name - another default definition, normally 'default' is good
</code></pre>

All options can be specified as strings or symbols, additionally :for can also work with Class

h2. Dependencies

This plugin mixes directly into @Object@, so there's no dependency on another library. Any class can act as configurable.

Actually, @ActiveSupport@ is required (thanks to @cattr_accessor@), but since this is a
plugin for a Rails application, there shouldn't be any issues there.

h2. Credits

"Chris Scharf":http://tiny.scharfie.com is the original author of this "on-the-fly" configuration. 
His original implementation was intended for application wide configuration settings. You can find
his post about it "here":http://slateinfo.blogs.wvu.edu/blog/2007/10/29/custom-configuration-settings-made-easy. 

"Ryan Heath":http://rpheath.com/posts/357-rails-plugin-acts-as-configurable is the author of original plugin.

With my version you can have the convenience of storing configuration in yaml file - you do not have to change code to change configuration.

(c) 2010 Michal Papis, Ryan Heath and Chris Scharf, released under the MIT license
